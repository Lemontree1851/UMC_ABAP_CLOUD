managed implementation in class zbp_r_tbc1005 unique;
strict ( 2 );
with draft;

define behavior for ZR_TBC1005 alias Role
persistent table ztbc_1005
draft table ztbc_1005_d
etag master LocalLastChangedAt
lock master total etag LastChangedAt
authorization master ( instance )
{
  create;
  update;
  delete ( precheck );

  field ( readonly )
  CreatedBy,
  CreatedAt,
  LastChangedBy,
  LastChangedAt,
  LocalLastChangedAt;

  field ( mandatory : create, readonly : update ) RoleId;

  draft action Edit;
  draft action Activate optimized;
  draft action Discard;
  draft action Resume;
  draft determine action Prepare;

  association _User { with draft; create; }
  association _AccessBtn { with draft; create; }

  mapping for ztbc_1005
    {
      RoleId             = role_id;
      RoleName           = role_name;
      CreatedBy          = created_by;
      CreatedAt          = created_at;
      LastChangedBy      = last_changed_by;
      LastChangedAt      = last_changed_at;
      LocalLastChangedAt = local_last_changed_at;
    }
}

define behavior for ZR_TBC1016 alias AccessBtn
persistent table ztbc_1016
draft table ztbc_1016_d
lock dependent by _Role
authorization dependent by _Role
etag master LocalLastChangedAt
{
  update;
  delete;

  field ( readonly, numbering : managed ) Uuid;
  field ( readonly )
  RoleId,
  FunctionId,
  AccessName,
  DesignFileId,
  FunctionName,
  CreatedBy,
  CreatedAt,
  LastChangedBy,
  LastChangedAt,
  LocalLastChangedAt;

  field ( mandatory ) AccessId;

  determination setFunctionId on save { field AccessId; }
  validation validateAccessId on save ##NOT_ASSIGNED_TO_DETACT { field AccessId; create; update; }

  association _Role { with draft; }

  mapping for ztbc_1016
    {
      Uuid               = uuid;
      RoleId             = role_id;
      FunctionId         = function_id;
      AccessId           = access_id;
      CreatedBy          = created_by;
      CreatedAt          = created_at;
      LastChangedBy      = last_changed_by;
      LastChangedAt      = last_changed_at;
      LocalLastChangedAt = local_last_changed_at;
    }
}

define behavior for ZR_TBC1007_1 alias User
persistent table ztbc_1007
draft table ztbc_1007_1_d
lock dependent by _Role
authorization dependent by _Role
//with unmanaged save
{
  update;
  delete;

  field ( readonly ) RoleId;

  association _Role { with draft; }
}